{
  "version": 3,
  "sources": ["../../custom-media-element/dist/custom-media-element.js", "../../media-tracks/dist/track-event.js", "../../media-tracks/dist/utils.js", "../../media-tracks/dist/video-track-list.js", "../../media-tracks/dist/rendition-event.js", "../../media-tracks/dist/video-rendition-list.js", "../../media-tracks/dist/video-rendition.js", "../../media-tracks/dist/video-track.js", "../../media-tracks/dist/audio-rendition-list.js", "../../media-tracks/dist/audio-rendition.js", "../../media-tracks/dist/audio-track-list.js", "../../media-tracks/dist/audio-track.js", "../../media-tracks/dist/mixin.js"],
  "sourcesContent": ["const Events = [\n  \"abort\",\n  \"canplay\",\n  \"canplaythrough\",\n  \"durationchange\",\n  \"emptied\",\n  \"encrypted\",\n  \"ended\",\n  \"error\",\n  \"loadeddata\",\n  \"loadedmetadata\",\n  \"loadstart\",\n  \"pause\",\n  \"play\",\n  \"playing\",\n  \"progress\",\n  \"ratechange\",\n  \"seeked\",\n  \"seeking\",\n  \"stalled\",\n  \"suspend\",\n  \"timeupdate\",\n  \"volumechange\",\n  \"waiting\",\n  \"waitingforkey\",\n  \"resize\",\n  \"enterpictureinpicture\",\n  \"leavepictureinpicture\",\n  \"webkitbeginfullscreen\",\n  \"webkitendfullscreen\",\n  \"webkitpresentationmodechanged\"\n];\nconst Attributes = [\n  \"autopictureinpicture\",\n  \"disablepictureinpicture\",\n  \"disableremoteplayback\",\n  \"autoplay\",\n  \"controls\",\n  \"controlslist\",\n  \"crossorigin\",\n  \"loop\",\n  \"muted\",\n  \"playsinline\",\n  \"poster\",\n  \"preload\",\n  \"src\"\n];\nfunction getAudioTemplateHTML(attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-flex;\n        line-height: 0;\n        flex-direction: column;\n        justify-content: end;\n      }\n\n      audio {\n        width: 100%;\n      }\n    </style>\n    <slot name=\"media\">\n      <audio${serializeAttributes(attrs)}></audio>\n    </slot>\n    <slot></slot>\n  `\n  );\n}\nfunction getVideoTemplateHTML(attrs) {\n  return (\n    /*html*/\n    `\n    <style>\n      :host {\n        display: inline-block;\n        line-height: 0;\n      }\n\n      video {\n        max-width: 100%;\n        max-height: 100%;\n        min-width: 100%;\n        min-height: 100%;\n        object-fit: var(--media-object-fit, contain);\n        object-position: var(--media-object-position, 50% 50%);\n      }\n\n      video::-webkit-media-text-track-container {\n        transform: var(--media-webkit-text-track-transform);\n        transition: var(--media-webkit-text-track-transition);\n      }\n    </style>\n    <slot name=\"media\">\n      <video${serializeAttributes(attrs)}></video>\n    </slot>\n    <slot></slot>\n  `\n  );\n}\nfunction CustomMediaMixin(superclass, { tag, is }) {\n  const nativeElTest = globalThis.document?.createElement?.(tag, { is });\n  const nativeElProps = nativeElTest ? getNativeElProps(nativeElTest) : [];\n  return class CustomMedia extends superclass {\n    static getTemplateHTML = tag.endsWith(\"audio\") ? getAudioTemplateHTML : getVideoTemplateHTML;\n    static shadowRootOptions = { mode: \"open\" };\n    static Events = Events;\n    static #isDefined = false;\n    static get observedAttributes() {\n      CustomMedia.#define();\n      const natAttrs = nativeElTest?.constructor?.observedAttributes ?? [];\n      return [\n        ...natAttrs,\n        ...Attributes\n      ];\n    }\n    static #define() {\n      if (this.#isDefined) return;\n      this.#isDefined = true;\n      const propsToAttrs = new Set(this.observedAttributes);\n      propsToAttrs.delete(\"muted\");\n      for (const prop of nativeElProps) {\n        if (prop in this.prototype) continue;\n        if (typeof nativeElTest[prop] === \"function\") {\n          this.prototype[prop] = function(...args) {\n            this.#init();\n            const fn = () => {\n              if (this.call) return this.call(prop, ...args);\n              const nativeFn = this.nativeEl?.[prop];\n              return nativeFn?.apply(this.nativeEl, args);\n            };\n            return fn();\n          };\n        } else {\n          const config = {\n            get() {\n              this.#init();\n              const attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                const val = this.getAttribute(attr);\n                return val === null ? false : val === \"\" ? true : val;\n              }\n              return this.get?.(prop) ?? this.nativeEl?.[prop];\n            }\n          };\n          if (prop !== prop.toUpperCase()) {\n            config.set = function(val) {\n              this.#init();\n              const attr = prop.toLowerCase();\n              if (propsToAttrs.has(attr)) {\n                if (val === true || val === false || val == null) {\n                  this.toggleAttribute(attr, Boolean(val));\n                } else {\n                  this.setAttribute(attr, val);\n                }\n                return;\n              }\n              if (this.set) {\n                this.set(prop, val);\n                return;\n              }\n              if (this.nativeEl) {\n                this.nativeEl[prop] = val;\n              }\n            };\n          }\n          Object.defineProperty(this.prototype, prop, config);\n        }\n      }\n    }\n    // Private fields\n    #isInit = false;\n    #nativeEl = null;\n    #childMap = /* @__PURE__ */ new Map();\n    #childObserver;\n    get;\n    set;\n    call;\n    // If the custom element is defined before the custom element's HTML is parsed\n    // no attributes will be available in the constructor (construction process).\n    // Wait until initializing in the attributeChangedCallback or\n    // connectedCallback or accessing any properties.\n    get nativeEl() {\n      this.#init();\n      return this.#nativeEl ?? this.querySelector(\":scope > [slot=media]\") ?? this.querySelector(tag) ?? this.shadowRoot?.querySelector(tag) ?? null;\n    }\n    set nativeEl(val) {\n      this.#nativeEl = val;\n    }\n    get defaultMuted() {\n      return this.hasAttribute(\"muted\");\n    }\n    set defaultMuted(val) {\n      this.toggleAttribute(\"muted\", val);\n    }\n    get src() {\n      return this.getAttribute(\"src\");\n    }\n    set src(val) {\n      this.setAttribute(\"src\", `${val}`);\n    }\n    get preload() {\n      return this.getAttribute(\"preload\") ?? this.nativeEl?.preload;\n    }\n    set preload(val) {\n      this.setAttribute(\"preload\", `${val}`);\n    }\n    #init() {\n      if (this.#isInit) return;\n      this.#isInit = true;\n      this.init();\n    }\n    init() {\n      if (!this.shadowRoot) {\n        this.attachShadow({ mode: \"open\" });\n        const attrs = namedNodeMapToObject(this.attributes);\n        if (is) attrs.is = is;\n        if (tag) attrs.part = tag;\n        this.shadowRoot.innerHTML = this.constructor.getTemplateHTML(attrs);\n      }\n      this.nativeEl.muted = this.hasAttribute(\"muted\");\n      for (const prop of nativeElProps) {\n        this.#upgradeProperty(prop);\n      }\n      this.#childObserver = new MutationObserver(this.#syncMediaChildAttribute.bind(this));\n      this.shadowRoot.addEventListener(\"slotchange\", () => this.#syncMediaChildren());\n      this.#syncMediaChildren();\n      for (const type of this.constructor.Events) {\n        this.shadowRoot.addEventListener(type, this, true);\n      }\n    }\n    handleEvent(event) {\n      if (event.target === this.nativeEl) {\n        this.dispatchEvent(new CustomEvent(event.type, { detail: event.detail }));\n      }\n    }\n    #syncMediaChildren() {\n      const removeNativeChildren = new Map(this.#childMap);\n      const defaultSlot = this.shadowRoot?.querySelector(\"slot:not([name])\");\n      const mediaChildren = defaultSlot?.assignedElements({ flatten: true }).filter((el) => [\"track\", \"source\"].includes(el.localName));\n      mediaChildren.forEach((el) => {\n        removeNativeChildren.delete(el);\n        let clone = this.#childMap.get(el);\n        if (!clone) {\n          clone = el.cloneNode();\n          this.#childMap.set(el, clone);\n          this.#childObserver?.observe(el, { attributes: true });\n        }\n        this.nativeEl?.append(clone);\n        this.#enableDefaultTrack(clone);\n      });\n      removeNativeChildren.forEach((clone, el) => {\n        clone.remove();\n        this.#childMap.delete(el);\n      });\n    }\n    #syncMediaChildAttribute(mutations) {\n      for (const mutation of mutations) {\n        if (mutation.type === \"attributes\") {\n          const { target, attributeName } = mutation;\n          const clone = this.#childMap.get(target);\n          if (clone && attributeName) {\n            clone.setAttribute(attributeName, target.getAttribute(attributeName) ?? \"\");\n            this.#enableDefaultTrack(clone);\n          }\n        }\n      }\n    }\n    #enableDefaultTrack(trackEl) {\n      if (trackEl && trackEl.localName === \"track\" && trackEl.default && (trackEl.kind === \"chapters\" || trackEl.kind === \"metadata\") && trackEl.track.mode === \"disabled\") {\n        trackEl.track.mode = \"hidden\";\n      }\n    }\n    #upgradeProperty(prop) {\n      if (Object.prototype.hasOwnProperty.call(this, prop)) {\n        const value = this[prop];\n        delete this[prop];\n        this[prop] = value;\n      }\n    }\n    attributeChangedCallback(attrName, oldValue, newValue) {\n      this.#init();\n      this.#forwardAttribute(attrName, oldValue, newValue);\n    }\n    #forwardAttribute(attrName, _oldValue, newValue) {\n      if ([\"id\", \"class\"].includes(attrName)) return;\n      if (!CustomMedia.observedAttributes.includes(attrName) && this.constructor.observedAttributes.includes(attrName)) {\n        return;\n      }\n      if (newValue === null) {\n        this.nativeEl?.removeAttribute(attrName);\n      } else if (this.nativeEl?.getAttribute(attrName) !== newValue) {\n        this.nativeEl?.setAttribute(attrName, newValue);\n      }\n    }\n    connectedCallback() {\n      this.#init();\n    }\n  };\n}\nfunction getNativeElProps(nativeElTest) {\n  const nativeElProps = [];\n  for (let proto = Object.getPrototypeOf(nativeElTest); proto && proto !== HTMLElement.prototype; proto = Object.getPrototypeOf(proto)) {\n    const props = Object.getOwnPropertyNames(proto);\n    nativeElProps.push(...props);\n  }\n  return nativeElProps;\n}\nfunction serializeAttributes(attrs) {\n  let html = \"\";\n  for (const key in attrs) {\n    if (!Attributes.includes(key)) continue;\n    const value = attrs[key];\n    if (value === \"\") html += ` ${key}`;\n    else html += ` ${key}=\"${value}\"`;\n  }\n  return html;\n}\nfunction namedNodeMapToObject(namedNodeMap) {\n  const obj = {};\n  for (const attr of namedNodeMap) {\n    obj[attr.name] = attr.value;\n  }\n  return obj;\n}\nconst CustomVideoElement = CustomMediaMixin(globalThis.HTMLElement ?? class {\n}, {\n  tag: \"video\"\n});\nconst CustomAudioElement = CustomMediaMixin(globalThis.HTMLElement ?? class {\n}, {\n  tag: \"audio\"\n});\nexport {\n  Attributes,\n  CustomAudioElement,\n  CustomMediaMixin,\n  CustomVideoElement,\n  Events\n};\n", "class TrackEvent extends Event {\n  track;\n  constructor(type, init) {\n    super(type);\n    this.track = init.track;\n  }\n}\nexport {\n  TrackEvent\n};\n", "const privateProps = /* @__PURE__ */ new WeakMap();\nfunction getPrivate(instance) {\n  return privateProps.get(instance) ?? setPrivate(instance, {});\n}\nfunction setPrivate(instance, props) {\n  let saved = privateProps.get(instance);\n  if (!saved) privateProps.set(instance, saved = {});\n  return Object.assign(saved, props);\n}\nexport {\n  getPrivate,\n  setPrivate\n};\n", "import { TrackEvent } from \"./track-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addVideoTrack(media, track) {\n  const trackList = media.videoTracks;\n  getPrivate(track).media = media;\n  if (!getPrivate(track).renditionSet) {\n    getPrivate(track).renditionSet = /* @__PURE__ */ new Set();\n  }\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.add(track);\n  const index = trackSet.size - 1;\n  if (!(index in VideoTrackList.prototype)) {\n    Object.defineProperty(VideoTrackList.prototype, index, {\n      get() {\n        return [...getPrivate(this).trackSet][index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"addtrack\", { track }));\n  });\n}\nfunction removeVideoTrack(track) {\n  const trackList = getPrivate(track).media?.videoTracks;\n  if (!trackList) return;\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.delete(track);\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"removetrack\", { track }));\n  });\n}\nfunction selectedChanged(selected) {\n  const trackList = getPrivate(selected).media.videoTracks ?? [];\n  let hasUnselected = false;\n  for (const track of trackList) {\n    if (track === selected) continue;\n    track.selected = false;\n    hasUnselected = true;\n  }\n  if (hasUnselected) {\n    if (getPrivate(trackList).changeRequested) return;\n    getPrivate(trackList).changeRequested = true;\n    queueMicrotask(() => {\n      delete getPrivate(trackList).changeRequested;\n      trackList.dispatchEvent(new Event(\"change\"));\n    });\n  }\n}\nclass VideoTrackList extends EventTarget {\n  #addTrackCallback;\n  #removeTrackCallback;\n  #changeCallback;\n  constructor() {\n    super();\n    getPrivate(this).trackSet = /* @__PURE__ */ new Set();\n  }\n  get #tracks() {\n    return getPrivate(this).trackSet;\n  }\n  [Symbol.iterator]() {\n    return this.#tracks.values();\n  }\n  get length() {\n    return this.#tracks.size;\n  }\n  getTrackById(id) {\n    return [...this.#tracks].find((track) => track.id === id) ?? null;\n  }\n  get selectedIndex() {\n    return [...this.#tracks].findIndex((track) => track.selected);\n  }\n  get onaddtrack() {\n    return this.#addTrackCallback;\n  }\n  set onaddtrack(callback) {\n    if (this.#addTrackCallback) {\n      this.removeEventListener(\"addtrack\", this.#addTrackCallback);\n      this.#addTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addTrackCallback = callback;\n      this.addEventListener(\"addtrack\", callback);\n    }\n  }\n  get onremovetrack() {\n    return this.#removeTrackCallback;\n  }\n  set onremovetrack(callback) {\n    if (this.#removeTrackCallback) {\n      this.removeEventListener(\"removetrack\", this.#removeTrackCallback);\n      this.#removeTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeTrackCallback = callback;\n      this.addEventListener(\"removetrack\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  VideoTrackList,\n  addVideoTrack,\n  removeVideoTrack,\n  selectedChanged\n};\n", "class RenditionEvent extends Event {\n  rendition;\n  constructor(type, init) {\n    super(type);\n    this.rendition = init.rendition;\n  }\n}\nexport {\n  RenditionEvent\n};\n", "import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.videoRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in VideoRenditionList.prototype)) {\n    Object.defineProperty(VideoRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.selected) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", { rendition }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.selected) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", { rendition }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.videoRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested) return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.selected) return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.videoTracks].filter((track) => track.selected).flatMap((track) => [...getPrivate(track).renditionSet]);\n}\nclass VideoRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find((rendition) => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex((rendition) => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  VideoRenditionList,\n  addRendition,\n  removeRendition,\n  selectedChanged\n};\n", "import { selectedChanged } from \"./video-rendition-list.js\";\nclass VideoRendition {\n  src;\n  id;\n  width;\n  height;\n  bitrate;\n  frameRate;\n  codec;\n  #selected = false;\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val) return;\n    this.#selected = val;\n    selectedChanged(this);\n  }\n}\nexport {\n  VideoRendition\n};\n", "import { selectedChanged } from \"./video-track-list.js\";\nimport { VideoRendition } from \"./video-rendition.js\";\nimport { addRendition, removeRendition } from \"./video-rendition-list.js\";\nconst VideoTrackKind = {\n  alternative: \"alternative\",\n  captions: \"captions\",\n  main: \"main\",\n  sign: \"sign\",\n  subtitles: \"subtitles\",\n  commentary: \"commentary\"\n};\nclass VideoTrack {\n  id;\n  kind;\n  label = \"\";\n  language = \"\";\n  sourceBuffer;\n  #selected = false;\n  addRendition(src, width, height, codec, bitrate, frameRate) {\n    const rendition = new VideoRendition();\n    rendition.src = src;\n    rendition.width = width;\n    rendition.height = height;\n    rendition.frameRate = frameRate;\n    rendition.bitrate = bitrate;\n    rendition.codec = codec;\n    addRendition(this, rendition);\n    return rendition;\n  }\n  removeRendition(rendition) {\n    removeRendition(rendition);\n  }\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val) return;\n    this.#selected = val;\n    if (val !== true) return;\n    selectedChanged(this);\n  }\n}\nexport {\n  VideoTrack,\n  VideoTrackKind\n};\n", "import { RenditionEvent } from \"./rendition-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addRendition(track, rendition) {\n  const renditionList = getPrivate(track).media.audioRenditions;\n  getPrivate(rendition).media = getPrivate(track).media;\n  getPrivate(rendition).track = track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.add(rendition);\n  const index = renditionSet.size - 1;\n  if (!(index in AudioRenditionList.prototype)) {\n    Object.defineProperty(AudioRenditionList.prototype, index, {\n      get() {\n        return getCurrentRenditions(this)[index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    if (!track.enabled) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"addrendition\", { rendition }));\n  });\n}\nfunction removeRendition(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  const track = getPrivate(rendition).track;\n  const renditionSet = getPrivate(track).renditionSet;\n  renditionSet.delete(rendition);\n  queueMicrotask(() => {\n    const track2 = getPrivate(rendition).track;\n    if (!track2.enabled) return;\n    renditionList.dispatchEvent(new RenditionEvent(\"removerendition\", { rendition }));\n  });\n}\nfunction selectedChanged(rendition) {\n  const renditionList = getPrivate(rendition).media.audioRenditions;\n  if (!renditionList || getPrivate(renditionList).changeRequested) return;\n  getPrivate(renditionList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(renditionList).changeRequested;\n    const track = getPrivate(rendition).track;\n    if (!track.enabled) return;\n    renditionList.dispatchEvent(new Event(\"change\"));\n  });\n}\nfunction getCurrentRenditions(renditionList) {\n  const media = getPrivate(renditionList).media;\n  return [...media.audioTracks].filter((track) => track.enabled).flatMap((track) => [...getPrivate(track).renditionSet]);\n}\nclass AudioRenditionList extends EventTarget {\n  #addRenditionCallback;\n  #removeRenditionCallback;\n  #changeCallback;\n  [Symbol.iterator]() {\n    return getCurrentRenditions(this).values();\n  }\n  get length() {\n    return getCurrentRenditions(this).length;\n  }\n  getRenditionById(id) {\n    return getCurrentRenditions(this).find((rendition) => `${rendition.id}` === `${id}`) ?? null;\n  }\n  get selectedIndex() {\n    return getCurrentRenditions(this).findIndex((rendition) => rendition.selected);\n  }\n  set selectedIndex(index) {\n    for (const [i, rendition] of getCurrentRenditions(this).entries()) {\n      rendition.selected = i === index;\n    }\n  }\n  get onaddrendition() {\n    return this.#addRenditionCallback;\n  }\n  set onaddrendition(callback) {\n    if (this.#addRenditionCallback) {\n      this.removeEventListener(\"addrendition\", this.#addRenditionCallback);\n      this.#addRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addRenditionCallback = callback;\n      this.addEventListener(\"addrendition\", callback);\n    }\n  }\n  get onremoverendition() {\n    return this.#removeRenditionCallback;\n  }\n  set onremoverendition(callback) {\n    if (this.#removeRenditionCallback) {\n      this.removeEventListener(\"removerendition\", this.#removeRenditionCallback);\n      this.#removeRenditionCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeRenditionCallback = callback;\n      this.addEventListener(\"removerendition\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  AudioRenditionList,\n  addRendition,\n  removeRendition,\n  selectedChanged\n};\n", "import { selectedChanged } from \"./audio-rendition-list.js\";\nclass AudioRendition {\n  src;\n  id;\n  bitrate;\n  codec;\n  #selected = false;\n  get selected() {\n    return this.#selected;\n  }\n  set selected(val) {\n    if (this.#selected === val) return;\n    this.#selected = val;\n    selectedChanged(this);\n  }\n}\nexport {\n  AudioRendition\n};\n", "import { TrackEvent } from \"./track-event.js\";\nimport { getPrivate } from \"./utils.js\";\nfunction addAudioTrack(media, track) {\n  const trackList = media.audioTracks;\n  getPrivate(track).media = media;\n  if (!getPrivate(track).renditionSet) {\n    getPrivate(track).renditionSet = /* @__PURE__ */ new Set();\n  }\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.add(track);\n  const index = trackSet.size - 1;\n  if (!(index in AudioTrackList.prototype)) {\n    Object.defineProperty(AudioTrackList.prototype, index, {\n      get() {\n        return [...getPrivate(this).trackSet][index];\n      }\n    });\n  }\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"addtrack\", { track }));\n  });\n}\nfunction removeAudioTrack(track) {\n  const trackList = getPrivate(track).media?.audioTracks;\n  if (!trackList) return;\n  const trackSet = getPrivate(trackList).trackSet;\n  trackSet.delete(track);\n  queueMicrotask(() => {\n    trackList.dispatchEvent(new TrackEvent(\"removetrack\", { track }));\n  });\n}\nfunction enabledChanged(track) {\n  const trackList = getPrivate(track).media.audioTracks;\n  if (!trackList || getPrivate(trackList).changeRequested) return;\n  getPrivate(trackList).changeRequested = true;\n  queueMicrotask(() => {\n    delete getPrivate(trackList).changeRequested;\n    trackList.dispatchEvent(new Event(\"change\"));\n  });\n}\nclass AudioTrackList extends EventTarget {\n  #addTrackCallback;\n  #removeTrackCallback;\n  #changeCallback;\n  constructor() {\n    super();\n    getPrivate(this).trackSet = /* @__PURE__ */ new Set();\n  }\n  get #tracks() {\n    return getPrivate(this).trackSet;\n  }\n  [Symbol.iterator]() {\n    return this.#tracks.values();\n  }\n  get length() {\n    return this.#tracks.size;\n  }\n  getTrackById(id) {\n    return [...this.#tracks].find((track) => track.id === id) ?? null;\n  }\n  get onaddtrack() {\n    return this.#addTrackCallback;\n  }\n  set onaddtrack(callback) {\n    if (this.#addTrackCallback) {\n      this.removeEventListener(\"addtrack\", this.#addTrackCallback);\n      this.#addTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#addTrackCallback = callback;\n      this.addEventListener(\"addtrack\", callback);\n    }\n  }\n  get onremovetrack() {\n    return this.#removeTrackCallback;\n  }\n  set onremovetrack(callback) {\n    if (this.#removeTrackCallback) {\n      this.removeEventListener(\"removetrack\", this.#removeTrackCallback);\n      this.#removeTrackCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#removeTrackCallback = callback;\n      this.addEventListener(\"removetrack\", callback);\n    }\n  }\n  get onchange() {\n    return this.#changeCallback;\n  }\n  set onchange(callback) {\n    if (this.#changeCallback) {\n      this.removeEventListener(\"change\", this.#changeCallback);\n      this.#changeCallback = void 0;\n    }\n    if (typeof callback == \"function\") {\n      this.#changeCallback = callback;\n      this.addEventListener(\"change\", callback);\n    }\n  }\n}\nexport {\n  AudioTrackList,\n  addAudioTrack,\n  enabledChanged,\n  removeAudioTrack\n};\n", "import { AudioRendition } from \"./audio-rendition.js\";\nimport { enabledChanged } from \"./audio-track-list.js\";\nimport { addRendition, removeRendition } from \"./audio-rendition-list.js\";\nconst AudioTrackKind = {\n  alternative: \"alternative\",\n  descriptions: \"descriptions\",\n  main: \"main\",\n  \"main-desc\": \"main-desc\",\n  translation: \"translation\",\n  commentary: \"commentary\"\n};\nclass AudioTrack {\n  id;\n  kind;\n  label = \"\";\n  language = \"\";\n  sourceBuffer;\n  #enabled = false;\n  addRendition(src, codec, bitrate) {\n    const rendition = new AudioRendition();\n    rendition.src = src;\n    rendition.codec = codec;\n    rendition.bitrate = bitrate;\n    addRendition(this, rendition);\n    return rendition;\n  }\n  removeRendition(rendition) {\n    removeRendition(rendition);\n  }\n  get enabled() {\n    return this.#enabled;\n  }\n  set enabled(val) {\n    if (this.#enabled === val) return;\n    this.#enabled = val;\n    enabledChanged(this);\n  }\n}\nexport {\n  AudioTrack,\n  AudioTrackKind\n};\n", "import { VideoTrack } from \"./video-track.js\";\nimport { VideoTrackList, addVideoTrack, removeVideoTrack } from \"./video-track-list.js\";\nimport { AudioTrack } from \"./audio-track.js\";\nimport { AudioTrackList, addAudioTrack, removeAudioTrack } from \"./audio-track-list.js\";\nimport { VideoRenditionList } from \"./video-rendition-list.js\";\nimport { AudioRenditionList } from \"./audio-rendition-list.js\";\nimport { getPrivate } from \"./utils.js\";\nconst nativeVideoTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"video\");\nconst nativeAudioTracksFn = getBaseMediaTracksFn(globalThis.HTMLMediaElement, \"audio\");\nfunction MediaTracksMixin(MediaElementClass) {\n  if (!MediaElementClass?.prototype) return MediaElementClass;\n  const videoTracksFn = getBaseMediaTracksFn(MediaElementClass, \"video\");\n  if (!videoTracksFn || `${videoTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoTracks\", {\n      get() {\n        return getVideoTracks(this);\n      }\n    });\n  }\n  const audioTracksFn = getBaseMediaTracksFn(MediaElementClass, \"audio\");\n  if (!audioTracksFn || `${audioTracksFn}`.includes(\"[native code]\")) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioTracks\", {\n      get() {\n        return getAudioTracks(this);\n      }\n    });\n  }\n  if (!(\"addVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addVideoTrack = function(kind, label = \"\", language = \"\") {\n      const track = new VideoTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addVideoTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeVideoTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeVideoTrack = removeVideoTrack;\n  }\n  if (!(\"addAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.addAudioTrack = function(kind, label = \"\", language = \"\") {\n      const track = new AudioTrack();\n      track.kind = kind;\n      track.label = label;\n      track.language = language;\n      addAudioTrack(this, track);\n      return track;\n    };\n  }\n  if (!(\"removeAudioTrack\" in MediaElementClass.prototype)) {\n    MediaElementClass.prototype.removeAudioTrack = removeAudioTrack;\n  }\n  if (!(\"videoRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"videoRenditions\", {\n      get() {\n        return initVideoRenditions(this);\n      }\n    });\n  }\n  const initVideoRenditions = (media) => {\n    let renditions = getPrivate(media).videoRenditions;\n    if (!renditions) {\n      renditions = new VideoRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).videoRenditions = renditions;\n    }\n    return renditions;\n  };\n  if (!(\"audioRenditions\" in MediaElementClass.prototype)) {\n    Object.defineProperty(MediaElementClass.prototype, \"audioRenditions\", {\n      get() {\n        return initAudioRenditions(this);\n      }\n    });\n  }\n  const initAudioRenditions = (media) => {\n    let renditions = getPrivate(media).audioRenditions;\n    if (!renditions) {\n      renditions = new AudioRenditionList();\n      getPrivate(renditions).media = media;\n      getPrivate(media).audioRenditions = renditions;\n    }\n    return renditions;\n  };\n  return MediaElementClass;\n}\nfunction getBaseMediaTracksFn(MediaElementClass, type) {\n  if (MediaElementClass?.prototype) {\n    return Object.getOwnPropertyDescriptor(MediaElementClass.prototype, `${type}Tracks`)?.get;\n  }\n}\nfunction getVideoTracks(media) {\n  let tracks = getPrivate(media).videoTracks;\n  if (!tracks) {\n    tracks = new VideoTrackList();\n    getPrivate(media).videoTracks = tracks;\n    if (nativeVideoTracksFn) {\n      const nativeTracks = nativeVideoTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addVideoTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", (event) => {\n        if ([...tracks].some((t) => t instanceof VideoTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeVideoTrack(nativeTrack);\n          }\n          return;\n        }\n        addVideoTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", (event) => {\n        removeVideoTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nfunction getAudioTracks(media) {\n  let tracks = getPrivate(media).audioTracks;\n  if (!tracks) {\n    tracks = new AudioTrackList();\n    getPrivate(media).audioTracks = tracks;\n    if (nativeAudioTracksFn) {\n      const nativeTracks = nativeAudioTracksFn.call(media.nativeEl ?? media);\n      for (const nativeTrack of nativeTracks) {\n        addAudioTrack(media, nativeTrack);\n      }\n      nativeTracks.addEventListener(\"change\", () => {\n        tracks.dispatchEvent(new Event(\"change\"));\n      });\n      nativeTracks.addEventListener(\"addtrack\", (event) => {\n        if ([...tracks].some((t) => t instanceof AudioTrack)) {\n          for (const nativeTrack of nativeTracks) {\n            removeAudioTrack(nativeTrack);\n          }\n          return;\n        }\n        addAudioTrack(media, event.track);\n      });\n      nativeTracks.addEventListener(\"removetrack\", (event) => {\n        removeAudioTrack(event.track);\n      });\n    }\n  }\n  return tracks;\n}\nexport {\n  MediaTracksMixin\n};\n"],
  "mappings": "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",
  "names": ["_a", "_b", "_c", "selectedChanged", "_changeCallback", "selectedChanged", "_selected", "addRendition", "getCurrentRenditions", "removeRendition", "selectedChanged", "_addRenditionCallback", "_removeRenditionCallback", "_changeCallback", "_selected", "selectedChanged", "_addTrackCallback", "_removeTrackCallback", "_changeCallback", "tracks_get", "addRendition", "removeRendition"]
}
